{"version":3,"sources":["../../../src/commands/build-native/build.ts"],"names":["createBuilderContextAsync","projectDir","eas","user","UserManager","ensureLoggedInAsync","exp","accountName","owner","username","projectName","slug","startBuildAsync","client","builder","projectId","tarPath","path","join","os","tmpdir","ensureCredentialsAsync","fileSize","archiveUrl","UploadType","TURTLE_PROJECT_SOURCES","job","prepareJobAsync","buildId","postAsync","fs","remove","waitForBuildEndAsync","ctx","buildIds","timeoutSec","intervalSec","ApiV2","clientForUser","spinner","start","time","Date","getTime","endTime","buildInfo","Promise","all","map","getAsync","err","length","status","succeed","text","fail","Error","warn","filter","build","includes","inQueue","inProgress","errored","finished","unknownState","chalk","red","green","i"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AA6BO,eAAeA,yBAAf,CACLC,UADK,EAELC,GAFK,EAGoB;AACzB,QAAMC,IAAU,GAAG,MAAMC,mBAAYC,mBAAZ,EAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAU,yBAAUL,UAAV,CAAhB;AACA,QAAMM,WAAW,GAAGD,GAAG,CAACE,KAAJ,IAAaL,IAAI,CAACM,QAAtC;AACA,QAAMC,WAAW,GAAGJ,GAAG,CAACK,IAAxB;AAEA,SAAO;AACLT,IAAAA,GADK;AAELD,IAAAA,UAFK;AAGLE,IAAAA,IAHK;AAILI,IAAAA,WAJK;AAKLG,IAAAA,WALK;AAMLJ,IAAAA;AANK,GAAP;AAQD;;AAEM,eAAeM,eAAf,CACLC,MADK,EAELC,OAFK,EAGLC,SAHK,EAIY;AACjB,QAAMC,OAAO,GAAGC,gBAAKC,IAAL,CAAUC,cAAGC,MAAH,EAAV,EAAwB,GAAE,iBAAS,SAAnC,CAAhB;;AACA,MAAI;AACF,UAAMN,OAAO,CAACO,sBAAR,EAAN;AAEA,UAAMC,QAAQ,GAAG,MAAM,sCAAwBN,OAAxB,CAAvB;AAEA,wBAAI,6BAAJ;AACA,UAAMO,UAAU,GAAG,MAAM,4BACvBC,sBAAWC,sBADY,EAEvBT,OAFuB,EAGvB,uCAAsBM,QAAtB,CAHuB,CAAzB;AAMA,UAAMI,GAAG,GAAG,MAAMZ,OAAO,CAACa,eAAR,CAAwBJ,UAAxB,CAAlB;AACA,wBAAI,gBAAJ;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAc,MAAMf,MAAM,CAACgB,SAAP,CAAkB,YAAWd,SAAU,SAAvC,EAAiD;AACzEW,MAAAA,GAAG,EAAEA;AADoE,KAAjD,CAA1B;AAGA,WAAOE,OAAP;AACD,GAlBD,SAkBU;AACR,UAAME,mBAAGC,MAAH,CAAUf,OAAV,CAAN;AACD;AACF;;AAEM,eAAegB,oBAAf,CACLC,GADK,EAELlB,SAFK,EAGLmB,QAHK,EAIL;AAAEC,EAAAA,UAAU,GAAG,IAAf;AAAqBC,EAAAA,WAAW,GAAG;AAAnC,IAA0C,EAJrC,EAK6B;AAAA;;AAClC,QAAMvB,MAAM,GAAGwB,aAAMC,aAAN,CAAoBL,GAAG,CAAC9B,IAAxB,CAAf;;AACA,sBAAI,8DAAJ;AACA,QAAMoC,OAAO,GAAG,sBAAMC,KAAN,EAAhB;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,QAAMC,OAAO,GAAGH,IAAI,GAAGN,UAAU,GAAG,IAApC;;AACA,SAAOM,IAAI,IAAIG,OAAf,EAAwB;AACtB,UAAMC,SAA+B,GAAG,MAAMC,OAAO,CAACC,GAAR,CAC5Cb,QAAQ,CAACc,GAAT,CAAapB,OAAO,IAAI;AACtB,UAAI;AACF,eAAOf,MAAM,CAACoC,QAAP,CAAiB,YAAWlC,SAAU,WAAUa,OAAQ,EAAxD,CAAP;AACD,OAFD,CAEE,OAAOsB,GAAP,EAAY;AACZ,eAAO,IAAP;AACD;AACF,KAND,CAD4C,CAA9C;;AASA,QAAIL,SAAS,CAACM,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,6BAAQN,SAAS,CAAC,CAAD,CAAjB,gDAAQ,YAAcO,MAAtB;AACE,aAAK,UAAL;AACEb,UAAAA,OAAO,CAACc,OAAR,CAAgB,iBAAhB;AACA,iBAAOR,SAAP;;AACF,aAAK,UAAL;AACEN,UAAAA,OAAO,CAACe,IAAR,GAAe,iBAAf;AACA;;AACF,aAAK,aAAL;AACEf,UAAAA,OAAO,CAACe,IAAR,GAAe,sBAAf;AACA;;AACF,aAAK,SAAL;AACEf,UAAAA,OAAO,CAACgB,IAAR,CAAa,eAAb;AACA,gBAAM,IAAIC,KAAJ,CAAW,0BAAX,CAAN;;AACF;AACEjB,UAAAA,OAAO,CAACkB,IAAR,CAAa,iBAAb;AACA,gBAAM,IAAID,KAAJ,CAAW,mBAAkBX,SAAU,cAAvC,CAAN;AAfJ;AAiBD,KAlBD,MAkBO;AACL,UAAIA,SAAS,CAACa,MAAV,CAAiBC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEP,MAAP,MAAkB,UAA5C,EAAwDD,MAAxD,KAAmEN,SAAS,CAACM,MAAjF,EAAyF;AACvFZ,QAAAA,OAAO,CAACc,OAAR,CAAgB,0BAAhB;AACA,eAAOR,SAAP;AACD,OAHD,MAGO,IACLA,SAAS,CAACa,MAAV,CAAiBC,KAAK;AAAA;;AAAA,eAAI,CAAC,UAAD,EAAa,SAAb,EAAwBC,QAAxB,kBAAiCD,KAAjC,aAAiCA,KAAjC,uBAAiCA,KAAK,CAAEP,MAAxC,yDAAkD,EAAlD,CAAJ;AAAA,OAAtB,EAAiFD,MAAjF,KACAN,SAAS,CAACM,MAFL,EAGL;AACAZ,QAAAA,OAAO,CAACgB,IAAR,CAAa,4BAAb;AACA,eAAOV,SAAP;AACD,OANM,MAMA;AACL,cAAMgB,OAAO,GAAGhB,SAAS,CAACa,MAAV,CAAiBC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEP,MAAP,MAAkB,UAA5C,EAAwDD,MAAxE;AACA,cAAMW,UAAU,GAAGjB,SAAS,CAACa,MAAV,CAAiBC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEP,MAAP,MAAkB,aAA5C,EAA2DD,MAA9E;AACA,cAAMY,OAAO,GAAGlB,SAAS,CAACa,MAAV,CAAiBC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEP,MAAP,MAAkB,SAA5C,EAAuDD,MAAvE;AACA,cAAMa,QAAQ,GAAGnB,SAAS,CAACa,MAAV,CAAiBC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEP,MAAP,MAAkB,UAA5C,EAAwDD,MAAzE;AACA,cAAMc,YAAY,GAAGpB,SAAS,CAACM,MAAV,GAAmBU,OAAnB,GAA6BC,UAA7B,GAA0CC,OAA1C,GAAoDC,QAAzE;AACAzB,QAAAA,OAAO,CAACe,IAAR,GAAe,CACbO,OAAO,IAAK,oBAAmBA,OAAQ,EAD1B,EAEbC,UAAU,IAAK,uBAAsBA,UAAW,EAFnC,EAGbC,OAAO,IAAIG,iBAAMC,GAAN,CAAW,kBAAiBJ,OAAQ,EAApC,CAHE,EAIbC,QAAQ,IAAIE,iBAAME,KAAN,CAAa,oBAAmBJ,QAAS,EAAzC,CAJC,EAKbC,YAAY,IAAIC,iBAAMC,GAAN,CAAW,4BAA2BF,YAAa,EAAnD,CALH,EAOZP,MAPY,CAOLW,CAAC,IAAIA,CAPA,EAQZnD,IARY,CAQP,IARO,CAAf;AASD;AACF;;AACDuB,IAAAA,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAP;AACA,UAAM,2BAAWP,WAAW,GAAG,IAAzB,CAAN;AACD;;AACDG,EAAAA,OAAO,CAACkB,IAAR,CAAa,YAAb;AACA,QAAM,IAAID,KAAJ,CACJ,qFADI,CAAN;AAGD","sourcesContent":["import os from 'os';\nimport path from 'path';\n\nimport { Job, Platform } from '@expo/build-tools';\nimport { ExpoConfig, getConfig } from '@expo/config';\nimport { ApiV2, User, UserManager } from '@expo/xdl';\nimport delayAsync from 'delay-async';\nimport fs from 'fs-extra';\nimport ora from 'ora';\nimport chalk from 'chalk';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { EasConfig } from '../../easJson';\nimport { makeProjectTarballAsync } from './utils';\nimport log from '../../log';\nimport { UploadType, uploadAsync } from '../../uploads';\nimport { createProgressTracker } from '../utils/progress';\n\nexport interface BuildInfo {\n  status: string;\n  platform: Platform;\n  createdAt: string;\n  artifacts?: BuildArtifacts;\n}\n\ninterface BuildArtifacts {\n  buildUrl?: string;\n  logsUrl: string;\n}\n\nexport interface BuilderContext {\n  projectDir: string;\n  eas: EasConfig;\n  user: User;\n  accountName: string;\n  projectName: string;\n  exp: ExpoConfig;\n}\n\nexport interface Builder {\n  ctx: BuilderContext;\n  ensureCredentialsAsync(): Promise<void>;\n  prepareJobAsync(archiveUrl: string): Promise<Job>;\n}\n\nexport async function createBuilderContextAsync(\n  projectDir: string,\n  eas: EasConfig\n): Promise<BuilderContext> {\n  const user: User = await UserManager.ensureLoggedInAsync();\n  const { exp } = getConfig(projectDir);\n  const accountName = exp.owner || user.username;\n  const projectName = exp.slug;\n\n  return {\n    eas,\n    projectDir,\n    user,\n    accountName,\n    projectName,\n    exp,\n  };\n}\n\nexport async function startBuildAsync(\n  client: ApiV2,\n  builder: Builder,\n  projectId: string\n): Promise<string> {\n  const tarPath = path.join(os.tmpdir(), `${uuidv4()}.tar.gz`);\n  try {\n    await builder.ensureCredentialsAsync();\n\n    const fileSize = await makeProjectTarballAsync(tarPath);\n\n    log('Uploading project to AWS S3');\n    const archiveUrl = await uploadAsync(\n      UploadType.TURTLE_PROJECT_SOURCES,\n      tarPath,\n      createProgressTracker(fileSize)\n    );\n\n    const job = await builder.prepareJobAsync(archiveUrl);\n    log('Starting build');\n    const { buildId } = await client.postAsync(`projects/${projectId}/builds`, {\n      job: job as any,\n    });\n    return buildId;\n  } finally {\n    await fs.remove(tarPath);\n  }\n}\n\nexport async function waitForBuildEndAsync(\n  ctx: BuilderContext,\n  projectId: string,\n  buildIds: string[],\n  { timeoutSec = 1800, intervalSec = 30 } = {}\n): Promise<Array<BuildInfo | null>> {\n  const client = ApiV2.clientForUser(ctx.user);\n  log('Waiting for build to complete. You can press Ctrl+C to exit.');\n  const spinner = ora().start();\n  let time = new Date().getTime();\n  const endTime = time + timeoutSec * 1000;\n  while (time <= endTime) {\n    const buildInfo: (BuildInfo | null)[] = await Promise.all(\n      buildIds.map(buildId => {\n        try {\n          return client.getAsync(`projects/${projectId}/builds/${buildId}`);\n        } catch (err) {\n          return null;\n        }\n      })\n    );\n    if (buildInfo.length === 1) {\n      switch (buildInfo[0]?.status) {\n        case 'finished':\n          spinner.succeed('Build finished.');\n          return buildInfo;\n        case 'in-queue':\n          spinner.text = 'Build queued...';\n          break;\n        case 'in-progress':\n          spinner.text = 'Build in progress...';\n          break;\n        case 'errored':\n          spinner.fail('Build failed.');\n          throw new Error(`Standalone build failed!`);\n        default:\n          spinner.warn('Unknown status.');\n          throw new Error(`Unknown status: ${buildInfo} - aborting!`);\n      }\n    } else {\n      if (buildInfo.filter(build => build?.status === 'finished').length === buildInfo.length) {\n        spinner.succeed('All build have finished.');\n        return buildInfo;\n      } else if (\n        buildInfo.filter(build => ['finished', 'errored'].includes(build?.status ?? '')).length ===\n        buildInfo.length\n      ) {\n        spinner.fail('Some of the builds failed.');\n        return buildInfo;\n      } else {\n        const inQueue = buildInfo.filter(build => build?.status === 'in-queue').length;\n        const inProgress = buildInfo.filter(build => build?.status === 'in-progress').length;\n        const errored = buildInfo.filter(build => build?.status === 'errored').length;\n        const finished = buildInfo.filter(build => build?.status === 'finished').length;\n        const unknownState = buildInfo.length - inQueue - inProgress - errored - finished;\n        spinner.text = [\n          inQueue && `Builds in queue: ${inQueue}`,\n          inProgress && `Builds in progress: ${inProgress}`,\n          errored && chalk.red(`Builds failed: ${errored}`),\n          finished && chalk.green(`Builds finished: ${finished}`),\n          unknownState && chalk.red(`Builds in unknown state: ${unknownState}`),\n        ]\n          .filter(i => i)\n          .join('\\t');\n      }\n    }\n    time = new Date().getTime();\n    await delayAsync(intervalSec * 1000);\n  }\n  spinner.warn('Timed out.');\n  throw new Error(\n    'Timeout reached! It is taking longer than expected to finish the build, aborting...'\n  );\n}\n"],"file":"build.js"}