import { Job, Platform } from '@expo/build-tools';
import { ExpoConfig } from '@expo/config';
import { ApiV2, User } from '@expo/xdl';
import { EasConfig } from '../../easJson';
export interface BuildInfo {
    status: string;
    platform: Platform;
    createdAt: string;
    artifacts?: BuildArtifacts;
}
interface BuildArtifacts {
    buildUrl?: string;
    logsUrl: string;
}
export interface BuilderContext {
    projectDir: string;
    eas: EasConfig;
    user: User;
    accountName: string;
    projectName: string;
    exp: ExpoConfig;
}
export interface Builder {
    ctx: BuilderContext;
    ensureCredentialsAsync(): Promise<void>;
    prepareJobAsync(archiveUrl: string): Promise<Job>;
}
export declare function createBuilderContextAsync(projectDir: string, eas: EasConfig): Promise<BuilderContext>;
export declare function startBuildAsync(client: ApiV2, builder: Builder, projectId: string): Promise<string>;
export declare function waitForBuildEndAsync(ctx: BuilderContext, projectId: string, buildIds: string[], { timeoutSec, intervalSec }?: {
    timeoutSec?: number | undefined;
    intervalSec?: number | undefined;
}): Promise<Array<BuildInfo | null>>;
export {};
