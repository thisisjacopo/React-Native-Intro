{"version":3,"sources":["../../../src/commands/build-native/iOSBuilder.ts"],"names":["iOSBuilder","constructor","ctx","eas","builds","ios","Error","buildProfile","prepareJobAsync","archiveUrl","workflow","Workflow","Generic","prepareGenericJobAsync","Managed","prepareManagedJobAsync","ensureCredentialsAsync","shouldLoadCredentials","bundleIdentifier","exp","provider","iOSCredentialsProvider","projectDir","projectName","accountName","initAsync","credentialsSource","credentials","getCredentialsAsync","prepareJobCommonAsync","secrets","provisioningProfileBase64","provisioningProfile","distributionCertificate","dataBase64","certP12","password","certPassword","platform","Platform","iOS","projectUrl","type","BuildType","packageJson","example","manifest","buildType"],"mappings":"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","sourcesContent":["import { BuildType, Job, Platform, iOS, sanitizeJob } from '@expo/build-tools';\n\nimport { Keystore } from '../../credentials/credentials';\nimport { Context } from '../../credentials/context';\nimport iOSCredentialsProvider, {\n  iOSCredentials,\n} from '../../credentials/provider/iOSCredentialsProvider';\nimport { ensureCredentialsAsync } from './credentials';\nimport { Builder, BuilderContext } from './build';\nimport {\n  CredentialsSource,\n  Workflow,\n  iOSBuildProfile,\n  iOSGenericBuildProfile,\n  iOSManagedBuildProfile,\n} from '../../easJson';\n\ninterface CommonJobProperties {\n  platform: Platform.iOS;\n  projectUrl: string;\n  secrets?: {\n    provisioningProfileBase64: string;\n    distributionCertificate: {\n      dataBase64: string;\n      password: string;\n    };\n  };\n}\n\nclass iOSBuilder implements Builder {\n  private credentials?: iOSCredentials;\n  private buildProfile: iOSBuildProfile;\n\n  constructor(public readonly ctx: BuilderContext) {\n    if (!ctx.eas.builds.ios) {\n      throw new Error(\"missing ios configuration, shouldn't happen\");\n    }\n    this.buildProfile = ctx.eas.builds.ios;\n  }\n\n  public async prepareJobAsync(archiveUrl: string): Promise<Job> {\n    if (this.buildProfile.workflow === Workflow.Generic) {\n      return sanitizeJob(await this.prepareGenericJobAsync(archiveUrl, this.buildProfile));\n    } else if (this.buildProfile.workflow === Workflow.Managed) {\n      return sanitizeJob(await this.prepareManagedJobAsync(archiveUrl, this.buildProfile));\n    } else {\n      throw new Error(\"Unknown workflow. Shouldn't happen\");\n    }\n  }\n\n  public async ensureCredentialsAsync(): Promise<void> {\n    if (!this.shouldLoadCredentials()) {\n      return;\n    }\n    const bundleIdentifier = this.ctx.exp?.ios?.bundleIdentifier;\n    if (!bundleIdentifier) {\n      throw new Error('\"expo.ios.bundleIdentifier\" field is required in your app.json');\n    }\n    const provider = new iOSCredentialsProvider(this.ctx.projectDir, {\n      projectName: this.ctx.projectName,\n      accountName: this.ctx.accountName,\n      bundleIdentifier,\n    });\n    await provider.initAsync();\n    const credentialsSource = await ensureCredentialsAsync(\n      provider,\n      this.buildProfile.workflow,\n      this.buildProfile.credentialsSource\n    );\n    this.credentials = await provider.getCredentialsAsync(credentialsSource);\n  }\n\n  private async prepareJobCommonAsync(archiveUrl: string): Promise<Partial<CommonJobProperties>> {\n    const secrets = this.credentials\n      ? {\n          secrets: {\n            provisioningProfileBase64: this.credentials.provisioningProfile,\n            distributionCertificate: {\n              dataBase64: this.credentials.distributionCertificate.certP12,\n              password: this.credentials.distributionCertificate.certPassword,\n            },\n          },\n        }\n      : {};\n\n    return {\n      platform: Platform.iOS,\n      projectUrl: archiveUrl,\n      ...secrets,\n    };\n  }\n\n  private async prepareGenericJobAsync(\n    archiveUrl: string,\n    buildProfile: iOSGenericBuildProfile\n  ): Promise<Partial<iOS.GenericJob>> {\n    return {\n      ...(await this.prepareJobCommonAsync(archiveUrl)),\n      type: BuildType.Generic,\n    };\n  }\n\n  private async prepareManagedJobAsync(\n    archiveUrl: string,\n    buildProfile: iOSManagedBuildProfile\n  ): Promise<Partial<iOS.ManagedJob>> {\n    return {\n      ...(await this.prepareJobCommonAsync(archiveUrl)),\n      type: BuildType.Managed,\n      packageJson: { example: 'packageJson' },\n      manifest: { example: 'manifest' },\n    };\n  }\n\n  private shouldLoadCredentials(): boolean {\n    return (\n      (this.buildProfile.workflow === Workflow.Managed &&\n        this.buildProfile.buildType !== 'simulator') ||\n      this.buildProfile.workflow === Workflow.Generic\n    );\n  }\n}\n\nexport default iOSBuilder;\n"],"file":"iOSBuilder.js"}