{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jacoporodighiero/Desktop/React-Native-Intro/React Native Intro/src/screens/ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  console.log(colors);\n  return React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"ADD A RANDOM COLOR\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 28\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({\n  view: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\nexport default ColorScreen;","map":{"version":3,"sources":["/Users/jacoporodighiero/Desktop/React-Native-Intro/React Native Intro/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","console","log","styles","view","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","StyleSheet","create","display","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,oBAAd;AACA,IAAA,OAAO,EAAE,mBAAM;AACXJ,MAAAA,SAAS,8BAAKD,MAAL,IAAaM,SAAS,EAAtB,GAAT;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,QAAD;AACI,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIA,IAAJ;AAAA,KADtB;AAEI,IAAA,IAAI,EAAEP,MAFV;AAGI,IAAA,UAAU,EAAE,0BAAU;AAAA,UAARO,IAAQ,QAARA,IAAQ;AAClB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,GAAT;AAAcC,UAAAA,KAAK,EAAE,GAArB;AAA0BC,UAAAA,eAAe,EAAEH;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAgBH,CAnBD;;AAqBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,SAAqBI,KAArB,SAA8BC,IAA9B;AACH,CAND;;AAQA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AACjCb,EAAAA,IAAI,EAAC;AACDc,IAAAA,OAAO,EAAE,MADR;AAEDC,IAAAA,UAAU,EAAE;AAFX;AAD4B,CAAlB,CAAf;AAOA,eAAerB,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport { View, StyleSheet, Button, FlatList } from \"react-native\";\n\n\nconst ColorScreen = () => {\n    const [colors, setColors] = useState([])\n    console.log(colors)\n    return (\n        <View style={styles.view}>\n            <Button title='ADD A RANDOM COLOR' \n            onPress={() => {\n                setColors([...colors, randomRgb()])\n            }}/>\n            <FlatList \n                keyExtractor={item => item}\n                data={colors}\n                renderItem={({item})=>{\n                    return <View style={{height: 100, width: 100, backgroundColor: item}}/>\n\n                }}\n            />\n        </View>\n    )\n}\n\nconst randomRgb = () => {\n    const red = Math.floor(Math.random() * 256)\n    const green = Math.floor(Math.random() * 256)\n    const blue = Math.floor(Math.random() * 256)\n\n    return `rgb(${red},${green},${blue})`\n}\n\nconst styles = StyleSheet.create({\nview:{\n    display: 'flex',\n    alignItems: 'center'\n}\n})\n\nexport default ColorScreen\n"]},"metadata":{},"sourceType":"module"}