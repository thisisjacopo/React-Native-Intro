{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/jacoporodighiero/Desktop/React-Native-Intro/React Native Intro/src/screens/SqareReducer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"change_red\":\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case \"change_blue\":\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    case \"change_green\":\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    blue: 0,\n    green: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_red\",\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_red\",\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_green\",\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_green\",\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 280,\n      width: 350,\n      backgroundColor: \"rgb(\" + red + \", \" + blue + \", \" + green + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 35,\n    color: \"rgb(20, 20, 20)\"\n  },\n  view: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\nexport default SquareScreen;","map":{"version":3,"sources":["/Users/jacoporodighiero/Desktop/React-Native-Intro/React Native Intro/src/screens/SqareReducer.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","blue","green","SquareScreen","dispatch","styles","view","height","width","backgroundColor","StyleSheet","create","text","fontSize","color","display","alignItems"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,OAAOC,YAAP;AAEA,IAAMC,eAAe,GAAG,EAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAIjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAEE,aAAOF,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG,OAAnB,GAA6B,GAA7B,IAAoCJ,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG,OAAnB,GAA6B,CAAjE,GACHJ,KADG,mCAEEA,KAFF;AAESG,QAAAA,GAAG,EAAEH,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG;AAFjC,QAAP;;AAGF,SAAK,aAAL;AACE,aAAOJ,KAAK,CAACK,IAAN,GAAaJ,MAAM,CAACG,OAApB,GAA8B,GAA9B,IACLJ,KAAK,CAACK,IAAN,GAAaJ,MAAM,CAACG,OAApB,GAA8B,CADzB,GAEHJ,KAFG,mCAGEA,KAHF;AAGSK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,GAAaJ,MAAM,CAACG;AAHnC,QAAP;;AAIF,SAAK,cAAL;AACE,aAAOJ,KAAK,CAACM,KAAN,GAAcL,MAAM,CAACG,OAArB,GAA+B,GAA/B,IACLJ,KAAK,CAACM,KAAN,GAAcL,MAAM,CAACG,OAArB,GAA+B,CAD1B,GAEHJ,KAFG,mCAGEA,KAHF;AAGSM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,GAAcL,MAAM,CAACG;AAHrC,QAAP;;AAIF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD,CAvBD;;AAyBA,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,oBACCX,UAAU,CAACG,OAAD,EAAU;AAAEI,IAAAA,GAAG,EAAE,CAAP;AAAUE,IAAAA,IAAI,EAAE,CAAhB;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAV,CADX;AAAA;AAAA,MAClBN,KADkB;AAAA,MACXQ,QADW;;AAAA,MAEjBL,GAFiB,GAEIH,KAFJ,CAEjBG,GAFiB;AAAA,MAEZG,KAFY,GAEIN,KAFJ,CAEZM,KAFY;AAAA,MAELD,IAFK,GAEIL,KAFJ,CAELK,IAFK;AAIzB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAE;AAAA,aACVF,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,OAAO,EAAEN;AAA/B,OAAD,CADE;AAAA,KADd;AAIE,IAAA,UAAU,EAAE;AAAA,aACVU,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,OAAO,EAAE,CAAC,CAAD,GAAKN;AAApC,OAAD,CADE;AAAA,KAJd;AAOE,IAAA,KAAK,EAAC,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAE;AAAA,aACVU,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,OAAO,EAAEN;AAAhC,OAAD,CADE;AAAA,KADd;AAIE,IAAA,UAAU,EAAE;AAAA,aACVU,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,OAAO,EAAE,CAAC,CAAD,GAAKN;AAArC,OAAD,CADE;AAAA,KAJd;AAOE,IAAA,KAAK,EAAC,OAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAE;AAAA,aACVU,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,OAAO,EAAEN;AAAjC,OAAD,CADE;AAAA,KADd;AAIE,IAAA,UAAU,EAAE;AAAA,aACVU,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,OAAO,EAAE,CAAC,CAAD,GAAKN;AAAtC,OAAD,CADE;AAAA,KAJd;AAOE,IAAA,KAAK,EAAC,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EA4BE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,KAAK,EAAE,GAFF;AAGLC,MAAAA,eAAe,WAASV,GAAT,UAAiBE,IAAjB,UAA0BC,KAA1B;AAHV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADF;AAsCD,CA1CD;;AA4CA,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE;AAFH,GADyB;AAK/BR,EAAAA,IAAI,EAAE;AACJS,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALyB,CAAlB,CAAf;AAWA,eAAeb,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport ColorCounter from \"../components/ColorCounter\";\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n  // state = {red: number, blue: number: green: numer}\n  //action = {type: 'change_red' || 'change_green' || 'change_blue', payload: 15 || -15}\n  // type is colorToChange and payload is the amount\n  switch (action.type) {\n    case \"change_red\":\n      //can't change the first argument directly, that is why we spread the current state first\n      return state.red + action.payload > 255 || state.red + action.payload < 0\n        ? state\n        : { ...state, red: state.red + action.payload };\n    case \"change_blue\":\n      return state.blue + action.payload > 255 ||\n        state.blue + action.payload < 0\n        ? state\n        : { ...state, blue: state.blue + action.payload };\n    case \"change_green\":\n      return state.green + action.payload > 255 ||\n        state.green + action.payload < 0\n        ? state\n        : { ...state, green: state.green + action.payload };\n    default:\n      return state;\n  }\n};\n\nconst SquareScreen = () => {\n  const [state, dispatch] = useReducer(reducer, { red: 0, blue: 0, green: 0 });\n  const { red, green, blue } = state;\n\n  return (\n    <View style={styles.view}>\n      <ColorCounter\n        onIncrease={() =>\n          dispatch({ type: \"change_red\", payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: \"change_red\", payload: -1 * COLOR_INCREMENT })\n        }\n        color=\"Red\"\n      />\n      <ColorCounter\n        onIncrease={() =>\n          dispatch({ type: \"change_blue\", payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: \"change_blue\", payload: -1 * COLOR_INCREMENT })\n        }\n        color=\"Green\"\n      />\n      <ColorCounter\n        onIncrease={() =>\n          dispatch({ type: \"change_green\", payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: \"change_green\", payload: -1 * COLOR_INCREMENT })\n        }\n        color=\"Blue\"\n      />\n      <View\n        style={{\n          height: 280,\n          width: 350,\n          backgroundColor: `rgb(${red}, ${blue}, ${green})`,\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 35,\n    color: \"rgb(20, 20, 20)\",\n  },\n  view: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport default SquareScreen;\n"]},"metadata":{},"sourceType":"module"}